name: Continuous Integration

on:
  push:
    branches-ignore:
      - 'main'
    paths-ignore:
      #   !! Attention!! removing the following line may produce an endless loop on the build system!!
      - '**/README.md'
      - '.github/workflows/continuous-delivery.yml'

# needed for dependabot to work
permissions:
  actions: write
  checks: write
  contents: read
  deployments: read
  discussions: read
  issues: read
  packages: read
  pages: read
  pull-requests: write
  repository-projects: read
  security-events: read
  statuses: read

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    env:
      # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
      # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
      MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
      # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
      # when running from the command line.
      # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
      MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
      # be sure the prefix here and the ones on the maintenance branches are not substrings of each other

    strategy:
      fail-fast: false
      matrix:
        jdk: [ 11 ]


    steps:
      - uses: actions/checkout@v4

      ## Configure JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11

      ## Enable Caching
      # Reduce cache size by excluding artifacts with the project.groupId
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      ## Configure maven settings
      - name: Prepare maven settings
        env:
          REPOSITORY_URL: ${{ vars.LEVIGO_MAVEN2_ALL_REPOSITORIES }}
          REPOSITORY_USERID: ${{ secrets.PUB_NEXUS2_USERNAME }}
          REPOSITORY_CREDENTIALS: ${{ secrets.PUB_NEXUS2_PASSWORD }}
          REPOSITORY_RELEASE_USERID: ${{ secrets.PUB_NEXUS2_PASSWORD_RW }}
          REPOSITORY_RELEASE_CREDENTIALS: ${{ secrets.PUB_NEXUS2_USERNAME_RW }}
        run: |
          echo NEXUS2_REPO_RELEASES ${{ secrets.NEXUS2_REPO_RELEASES }}
          mkdir -p ~/.m2
          envsubst < ./.github/settings.xml > ~/.m2/settings.xml

      ## Build with maven
      - name: Perform build
        run: mvn ${{ env.MAVEN_CLI_OPTS }} verify -Dmaven.test.failure.ignore=true

      ## Publish test report
      - name: Publish Test Report for JDK 11
        id: test-report
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true
          check_name: Test Report for JDK 11

      ## Notify developers
      - name: Notify developers
        uses: 8398a7/action-slack@v3
        with:
          username: GitHub
          icon_emoji: octocat
          channel: ci_docp
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref
          text: ${{ github.workflow }} ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() &&github.actor != 'dependabot[bot]' }}
